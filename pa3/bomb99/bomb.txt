
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000036dc memsz 0x000036dc flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002c64 vaddr 0x0804ac64 paddr 0x0804ac64 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a254
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000018d2  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a254  0804a254  00002254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000009e1  0804a280  0804a280  00002280  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ac64  0804ac64  00002c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     0000095c  0804ad80  0804ad80  00002d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a254 l    d  .fini	00000000              .fini
0804a280 l    d  .rodata	00000000              .rodata
0804ac64 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ad80 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a4a0 l     O .rodata	00000040              array.3268
00000000 l    df *ABS*	00000000              support.c
080491a5 l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
080496c1 l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b6d8 l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ac64 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a250 g     F .text	00000002              __libc_csu_fini
080493ca g     F .text	00000045              skip
08049668 g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a254 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048da4 g     F .text	0000016b              phase_5
08049390 g     F .text	00000002              initialize_bomb_solve
08048fe2 g     F .text	00000048              phase_7
08049392 g     F .text	00000038              blank_line
08049161 g     F .text	00000044              phase_9
08049795 g     F .text	000007ca              submitr
08048caa g     F .text	00000092              phase_3
08048c2d g     F .text	0000005c              phase_1
080491ff g     F .text	0000001f              invalid_phase
08049f94 g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
080494f7 g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
08049110 g     F .text	00000051              fun9
0804a284 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
0804921e g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a1f0 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048f0f g     F .text	0000005e              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a280 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
0804969e g     F .text	00000023              sigalrm_handler
08049f5f g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
0804956f g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
0804923d g     F .text	00000065              strings_not_equal
08048d3c g     F .text	00000068              phase_4
0804902a g     F .text	000000e6              phase_8
08048f6d g     F .text	00000075              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a166 g     F .text	0000007c              driver_post
0804940f g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
08049534 g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
080492a2 g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 50 a2 04 08       	push   $0x804a250
 8048990:	68 f0 a1 04 08       	push   $0x804a1f0
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 88 a2 04 08       	push   $0x804a288
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 8a a2 04 08       	push   $0x804a28a
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 a7 a2 04 08       	push   $0x804a2a7
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 a2 07 00 00       	call   80492a2 <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 18 a3 04 08       	push   $0x804a318
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 54 a3 04 08 	movl   $0x804a354,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 51 0a 00 00       	call   804956f <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 3d 0b 00 00       	call   8049668 <phase_defused>
 8048b2b:	c7 04 24 80 a3 04 08 	movl   $0x804a380,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 33 0a 00 00       	call   804956f <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 1f 0b 00 00       	call   8049668 <phase_defused>
 8048b49:	c7 04 24 c1 a2 04 08 	movl   $0x804a2c1,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 15 0a 00 00       	call   804956f <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 01 0b 00 00       	call   8049668 <phase_defused>
 8048b67:	c7 04 24 df a2 04 08 	movl   $0x804a2df,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 f7 09 00 00       	call   804956f <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 bc 01 00 00       	call   8048d3c <phase_4>
 8048b80:	e8 e3 0a 00 00       	call   8049668 <phase_defused>
 8048b85:	c7 04 24 ac a3 04 08 	movl   $0x804a3ac,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 d9 09 00 00       	call   804956f <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 06 02 00 00       	call   8048da4 <phase_5>
 8048b9e:	e8 c5 0a 00 00       	call   8049668 <phase_defused>
 8048ba3:	c7 04 24 f0 a2 04 08 	movl   $0x804a2f0,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 bb 09 00 00       	call   804956f <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 b1 03 00 00       	call   8048f6d <phase_6>
 8048bbc:	e8 a7 0a 00 00       	call   8049668 <phase_defused>
 8048bc1:	c7 04 24 d0 a3 04 08 	movl   $0x804a3d0,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 9d 09 00 00       	call   804956f <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 08 04 00 00       	call   8048fe2 <phase_7>
 8048bda:	e8 89 0a 00 00       	call   8049668 <phase_defused>
 8048bdf:	c7 04 24 f0 a3 04 08 	movl   $0x804a3f0,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 7f 09 00 00       	call   804956f <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 32 04 00 00       	call   804902a <phase_8>
 8048bf8:	e8 6b 0a 00 00       	call   8049668 <phase_defused>
 8048bfd:	c7 04 24 0e a3 04 08 	movl   $0x804a30e,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 61 09 00 00       	call   804956f <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 4b 05 00 00       	call   8049161 <phase_9>
 8048c16:	e8 4d 0a 00 00       	call   8049668 <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 32 a4 04 08       	push   $0x804a432
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 93 08 00 00       	call   80494f7 <explode_bomb>
 8048c64:	81 7c 24 08 58 02 00 	cmpl   $0x258,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 84 08 00 00       	call   80494f7 <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 0f a4 04 08       	push   $0x804a40f
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 a3 05 00 00       	call   804923d <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 51 08 00 00       	call   80494f7 <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 38 a4 04 08       	push   $0x804a438
 8048cb2:	e8 67 05 00 00       	call   804921e <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 54 68 65 20    	movl   $0x20656854,(%eax)
 8048cc8:	c7 40 04 6d 6f 6f 6e 	movl   $0x6e6f6f6d,0x4(%eax)
 8048ccf:	c7 40 08 20 75 6e 69 	movl   $0x696e7520,0x8(%eax)
 8048cd6:	c7 40 0c 74 20 77 69 	movl   $0x69772074,0xc(%eax)
 8048cdd:	c7 40 10 6c 6c 20 62 	movl   $0x62206c6c,0x10(%eax)
 8048ce4:	c7 40 14 65 20 64 69 	movl   $0x69642065,0x14(%eax)
 8048ceb:	c7 40 18 76 69 64 65 	movl   $0x65646976,0x18(%eax)
 8048cf2:	c7 40 1c 64 20 69 6e 	movl   $0x6e692064,0x1c(%eax)
 8048cf9:	c7 40 20 74 6f 20 74 	movl   $0x74206f74,0x20(%eax)
 8048d00:	c7 40 24 77 6f 20 64 	movl   $0x64206f77,0x24(%eax)
 8048d07:	c7 40 28 69 76 69 73 	movl   $0x73697669,0x28(%eax)
 8048d0e:	c7 40 2c 69 6f 6e 73 	movl   $0x736e6f69,0x2c(%eax)
 8048d15:	66 c7 40 30 2e 00    	movw   $0x2e,0x30(%eax)
 8048d1b:	c6 40 1e 71          	movb   $0x71,0x1e(%eax)
 8048d1f:	83 c4 08             	add    $0x8,%esp
 8048d22:	50                   	push   %eax
 8048d23:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d27:	e8 11 05 00 00       	call   804923d <strings_not_equal>
 8048d2c:	83 c4 10             	add    $0x10,%esp
 8048d2f:	85 c0                	test   %eax,%eax
 8048d31:	74 05                	je     8048d38 <phase_3+0x8e>
 8048d33:	e8 bf 07 00 00       	call   80494f7 <explode_bomb>
 8048d38:	83 c4 0c             	add    $0xc,%esp
 8048d3b:	c3                   	ret    

08048d3c <phase_4>:
 8048d3c:	56                   	push   %esi
 8048d3d:	53                   	push   %ebx
 8048d3e:	83 ec 2c             	sub    $0x2c,%esp
 8048d41:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d47:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d4b:	31 c0                	xor    %eax,%eax
 8048d4d:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d51:	50                   	push   %eax
 8048d52:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d56:	e8 d9 07 00 00       	call   8049534 <read_six_numbers>
 8048d5b:	83 c4 10             	add    $0x10,%esp
 8048d5e:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
 8048d63:	79 05                	jns    8048d6a <phase_4+0x2e>
 8048d65:	e8 8d 07 00 00       	call   80494f7 <explode_bomb>
 8048d6a:	8d 74 24 04          	lea    0x4(%esp),%esi
 8048d6e:	bb 05 00 00 00       	mov    $0x5,%ebx
 8048d73:	89 d8                	mov    %ebx,%eax
 8048d75:	03 06                	add    (%esi),%eax
 8048d77:	39 46 04             	cmp    %eax,0x4(%esi)
 8048d7a:	74 05                	je     8048d81 <phase_4+0x45>
 8048d7c:	e8 76 07 00 00       	call   80494f7 <explode_bomb>
 8048d81:	83 c6 04             	add    $0x4,%esi
 8048d84:	83 c3 05             	add    $0x5,%ebx
 8048d87:	83 fb 1e             	cmp    $0x1e,%ebx
 8048d8a:	75 e7                	jne    8048d73 <phase_4+0x37>
 8048d8c:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d90:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d97:	74 05                	je     8048d9e <phase_4+0x62>
 8048d99:	e8 62 fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d9e:	83 c4 24             	add    $0x24,%esp
 8048da1:	5b                   	pop    %ebx
 8048da2:	5e                   	pop    %esi
 8048da3:	c3                   	ret    

08048da4 <phase_5>:
 8048da4:	83 ec 28             	sub    $0x28,%esp
 8048da7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048dad:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048db1:	31 c0                	xor    %eax,%eax
 8048db3:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048db7:	50                   	push   %eax
 8048db8:	8d 44 24 13          	lea    0x13(%esp),%eax
 8048dbc:	50                   	push   %eax
 8048dbd:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048dc1:	50                   	push   %eax
 8048dc2:	68 2c a4 04 08       	push   $0x804a42c
 8048dc7:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048dcb:	e8 e0 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048dd0:	83 c4 20             	add    $0x20,%esp
 8048dd3:	83 f8 02             	cmp    $0x2,%eax
 8048dd6:	7f 05                	jg     8048ddd <phase_5+0x39>
 8048dd8:	e8 1a 07 00 00       	call   80494f7 <explode_bomb>
 8048ddd:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048de2:	0f 87 fc 00 00 00    	ja     8048ee4 <phase_5+0x140>
 8048de8:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dec:	ff 24 85 80 a4 04 08 	jmp    *0x804a480(,%eax,4)
 8048df3:	b8 61 00 00 00       	mov    $0x61,%eax
 8048df8:	81 7c 24 08 3d 01 00 	cmpl   $0x13d,0x8(%esp)
 8048dff:	00 
 8048e00:	0f 84 e8 00 00 00    	je     8048eee <phase_5+0x14a>
 8048e06:	e8 ec 06 00 00       	call   80494f7 <explode_bomb>
 8048e0b:	b8 61 00 00 00       	mov    $0x61,%eax
 8048e10:	e9 d9 00 00 00       	jmp    8048eee <phase_5+0x14a>
 8048e15:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e1a:	81 7c 24 08 cf 02 00 	cmpl   $0x2cf,0x8(%esp)
 8048e21:	00 
 8048e22:	0f 84 c6 00 00 00    	je     8048eee <phase_5+0x14a>
 8048e28:	e8 ca 06 00 00       	call   80494f7 <explode_bomb>
 8048e2d:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e32:	e9 b7 00 00 00       	jmp    8048eee <phase_5+0x14a>
 8048e37:	b8 69 00 00 00       	mov    $0x69,%eax
 8048e3c:	81 7c 24 08 bc 01 00 	cmpl   $0x1bc,0x8(%esp)
 8048e43:	00 
 8048e44:	0f 84 a4 00 00 00    	je     8048eee <phase_5+0x14a>
 8048e4a:	e8 a8 06 00 00       	call   80494f7 <explode_bomb>
 8048e4f:	b8 69 00 00 00       	mov    $0x69,%eax
 8048e54:	e9 95 00 00 00       	jmp    8048eee <phase_5+0x14a>
 8048e59:	b8 72 00 00 00       	mov    $0x72,%eax
 8048e5e:	81 7c 24 08 8a 02 00 	cmpl   $0x28a,0x8(%esp)
 8048e65:	00 
 8048e66:	0f 84 82 00 00 00    	je     8048eee <phase_5+0x14a>
 8048e6c:	e8 86 06 00 00       	call   80494f7 <explode_bomb>
 8048e71:	b8 72 00 00 00       	mov    $0x72,%eax
 8048e76:	eb 76                	jmp    8048eee <phase_5+0x14a>
 8048e78:	b8 66 00 00 00       	mov    $0x66,%eax
 8048e7d:	81 7c 24 08 c3 03 00 	cmpl   $0x3c3,0x8(%esp)
 8048e84:	00 
 8048e85:	74 67                	je     8048eee <phase_5+0x14a>
 8048e87:	e8 6b 06 00 00       	call   80494f7 <explode_bomb>
 8048e8c:	b8 66 00 00 00       	mov    $0x66,%eax
 8048e91:	eb 5b                	jmp    8048eee <phase_5+0x14a>
 8048e93:	b8 76 00 00 00       	mov    $0x76,%eax
 8048e98:	81 7c 24 08 c0 03 00 	cmpl   $0x3c0,0x8(%esp)
 8048e9f:	00 
 8048ea0:	74 4c                	je     8048eee <phase_5+0x14a>
 8048ea2:	e8 50 06 00 00       	call   80494f7 <explode_bomb>
 8048ea7:	b8 76 00 00 00       	mov    $0x76,%eax
 8048eac:	eb 40                	jmp    8048eee <phase_5+0x14a>
 8048eae:	b8 71 00 00 00       	mov    $0x71,%eax
 8048eb3:	81 7c 24 08 aa 00 00 	cmpl   $0xaa,0x8(%esp)
 8048eba:	00 
 8048ebb:	74 31                	je     8048eee <phase_5+0x14a>
 8048ebd:	e8 35 06 00 00       	call   80494f7 <explode_bomb>
 8048ec2:	b8 71 00 00 00       	mov    $0x71,%eax
 8048ec7:	eb 25                	jmp    8048eee <phase_5+0x14a>
 8048ec9:	b8 72 00 00 00       	mov    $0x72,%eax
 8048ece:	81 7c 24 08 0c 03 00 	cmpl   $0x30c,0x8(%esp)
 8048ed5:	00 
 8048ed6:	74 16                	je     8048eee <phase_5+0x14a>
 8048ed8:	e8 1a 06 00 00       	call   80494f7 <explode_bomb>
 8048edd:	b8 72 00 00 00       	mov    $0x72,%eax
 8048ee2:	eb 0a                	jmp    8048eee <phase_5+0x14a>
 8048ee4:	e8 0e 06 00 00       	call   80494f7 <explode_bomb>
 8048ee9:	b8 77 00 00 00       	mov    $0x77,%eax
 8048eee:	3a 44 24 03          	cmp    0x3(%esp),%al
 8048ef2:	74 05                	je     8048ef9 <phase_5+0x155>
 8048ef4:	e8 fe 05 00 00       	call   80494f7 <explode_bomb>
 8048ef9:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048efd:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048f04:	74 05                	je     8048f0b <phase_5+0x167>
 8048f06:	e8 f5 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f0b:	83 c4 1c             	add    $0x1c,%esp
 8048f0e:	c3                   	ret    

08048f0f <func6>:
 8048f0f:	56                   	push   %esi
 8048f10:	53                   	push   %ebx
 8048f11:	83 ec 04             	sub    $0x4,%esp
 8048f14:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 8048f18:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8048f1c:	8b 74 24 18          	mov    0x18(%esp),%esi
 8048f20:	89 f0                	mov    %esi,%eax
 8048f22:	29 d8                	sub    %ebx,%eax
 8048f24:	89 c2                	mov    %eax,%edx
 8048f26:	c1 ea 1f             	shr    $0x1f,%edx
 8048f29:	01 d0                	add    %edx,%eax
 8048f2b:	d1 f8                	sar    %eax
 8048f2d:	8d 14 18             	lea    (%eax,%ebx,1),%edx
 8048f30:	39 ca                	cmp    %ecx,%edx
 8048f32:	7e 15                	jle    8048f49 <func6+0x3a>
 8048f34:	83 ec 04             	sub    $0x4,%esp
 8048f37:	83 ea 01             	sub    $0x1,%edx
 8048f3a:	52                   	push   %edx
 8048f3b:	53                   	push   %ebx
 8048f3c:	51                   	push   %ecx
 8048f3d:	e8 cd ff ff ff       	call   8048f0f <func6>
 8048f42:	83 c4 10             	add    $0x10,%esp
 8048f45:	01 c0                	add    %eax,%eax
 8048f47:	eb 1e                	jmp    8048f67 <func6+0x58>
 8048f49:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f4e:	39 ca                	cmp    %ecx,%edx
 8048f50:	7d 15                	jge    8048f67 <func6+0x58>
 8048f52:	83 ec 04             	sub    $0x4,%esp
 8048f55:	56                   	push   %esi
 8048f56:	83 c2 01             	add    $0x1,%edx
 8048f59:	52                   	push   %edx
 8048f5a:	51                   	push   %ecx
 8048f5b:	e8 af ff ff ff       	call   8048f0f <func6>
 8048f60:	83 c4 10             	add    $0x10,%esp
 8048f63:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048f67:	83 c4 04             	add    $0x4,%esp
 8048f6a:	5b                   	pop    %ebx
 8048f6b:	5e                   	pop    %esi
 8048f6c:	c3                   	ret    

08048f6d <phase_6>:
 8048f6d:	83 ec 1c             	sub    $0x1c,%esp
 8048f70:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f76:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048f7a:	31 c0                	xor    %eax,%eax
 8048f7c:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048f80:	50                   	push   %eax
 8048f81:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048f85:	50                   	push   %eax
 8048f86:	68 c1 a6 04 08       	push   $0x804a6c1
 8048f8b:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048f8f:	e8 1c f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048f94:	83 c4 10             	add    $0x10,%esp
 8048f97:	83 f8 02             	cmp    $0x2,%eax
 8048f9a:	75 07                	jne    8048fa3 <phase_6+0x36>
 8048f9c:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)
 8048fa1:	76 05                	jbe    8048fa8 <phase_6+0x3b>
 8048fa3:	e8 4f 05 00 00       	call   80494f7 <explode_bomb>
 8048fa8:	83 ec 04             	sub    $0x4,%esp
 8048fab:	6a 0e                	push   $0xe
 8048fad:	6a 00                	push   $0x0
 8048faf:	ff 74 24 10          	pushl  0x10(%esp)
 8048fb3:	e8 57 ff ff ff       	call   8048f0f <func6>
 8048fb8:	83 c4 10             	add    $0x10,%esp
 8048fbb:	83 f8 07             	cmp    $0x7,%eax
 8048fbe:	75 07                	jne    8048fc7 <phase_6+0x5a>
 8048fc0:	83 7c 24 08 07       	cmpl   $0x7,0x8(%esp)
 8048fc5:	74 05                	je     8048fcc <phase_6+0x5f>
 8048fc7:	e8 2b 05 00 00       	call   80494f7 <explode_bomb>
 8048fcc:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048fd0:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048fd7:	74 05                	je     8048fde <phase_6+0x71>
 8048fd9:	e8 22 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048fde:	83 c4 1c             	add    $0x1c,%esp
 8048fe1:	c3                   	ret    

08048fe2 <phase_7>:
 8048fe2:	53                   	push   %ebx
 8048fe3:	83 ec 14             	sub    $0x14,%esp
 8048fe6:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048fea:	53                   	push   %ebx
 8048feb:	e8 2e 02 00 00       	call   804921e <string_length>
 8048ff0:	83 c4 10             	add    $0x10,%esp
 8048ff3:	83 f8 06             	cmp    $0x6,%eax
 8048ff6:	74 05                	je     8048ffd <phase_7+0x1b>
 8048ff8:	e8 fa 04 00 00       	call   80494f7 <explode_bomb>
 8048ffd:	89 d8                	mov    %ebx,%eax
 8048fff:	83 c3 06             	add    $0x6,%ebx
 8049002:	b9 00 00 00 00       	mov    $0x0,%ecx
 8049007:	0f b6 10             	movzbl (%eax),%edx
 804900a:	83 e2 0f             	and    $0xf,%edx
 804900d:	03 0c 95 a0 a4 04 08 	add    0x804a4a0(,%edx,4),%ecx
 8049014:	83 c0 01             	add    $0x1,%eax
 8049017:	39 d8                	cmp    %ebx,%eax
 8049019:	75 ec                	jne    8049007 <phase_7+0x25>
 804901b:	83 f9 41             	cmp    $0x41,%ecx
 804901e:	74 05                	je     8049025 <phase_7+0x43>
 8049020:	e8 d2 04 00 00       	call   80494f7 <explode_bomb>
 8049025:	83 c4 08             	add    $0x8,%esp
 8049028:	5b                   	pop    %ebx
 8049029:	c3                   	ret    

0804902a <phase_8>:
 804902a:	56                   	push   %esi
 804902b:	53                   	push   %ebx
 804902c:	83 ec 4c             	sub    $0x4c,%esp
 804902f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049035:	89 44 24 44          	mov    %eax,0x44(%esp)
 8049039:	31 c0                	xor    %eax,%eax
 804903b:	8d 44 24 14          	lea    0x14(%esp),%eax
 804903f:	50                   	push   %eax
 8049040:	ff 74 24 5c          	pushl  0x5c(%esp)
 8049044:	e8 eb 04 00 00       	call   8049534 <read_six_numbers>
 8049049:	83 c4 10             	add    $0x10,%esp
 804904c:	be 00 00 00 00       	mov    $0x0,%esi
 8049051:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8049055:	83 e8 01             	sub    $0x1,%eax
 8049058:	83 f8 05             	cmp    $0x5,%eax
 804905b:	76 05                	jbe    8049062 <phase_8+0x38>
 804905d:	e8 95 04 00 00       	call   80494f7 <explode_bomb>
 8049062:	83 c6 01             	add    $0x1,%esi
 8049065:	83 fe 06             	cmp    $0x6,%esi
 8049068:	74 33                	je     804909d <phase_8+0x73>
 804906a:	89 f3                	mov    %esi,%ebx
 804906c:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8049070:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8049074:	75 05                	jne    804907b <phase_8+0x51>
 8049076:	e8 7c 04 00 00       	call   80494f7 <explode_bomb>
 804907b:	83 c3 01             	add    $0x1,%ebx
 804907e:	83 fb 05             	cmp    $0x5,%ebx
 8049081:	7e e9                	jle    804906c <phase_8+0x42>
 8049083:	eb cc                	jmp    8049051 <phase_8+0x27>
 8049085:	8b 52 08             	mov    0x8(%edx),%edx
 8049088:	83 c0 01             	add    $0x1,%eax
 804908b:	39 c8                	cmp    %ecx,%eax
 804908d:	75 f6                	jne    8049085 <phase_8+0x5b>
 804908f:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8049093:	83 c3 01             	add    $0x1,%ebx
 8049096:	83 fb 06             	cmp    $0x6,%ebx
 8049099:	75 07                	jne    80490a2 <phase_8+0x78>
 804909b:	eb 1c                	jmp    80490b9 <phase_8+0x8f>
 804909d:	bb 00 00 00 00       	mov    $0x0,%ebx
 80490a2:	89 de                	mov    %ebx,%esi
 80490a4:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 80490a8:	b8 01 00 00 00       	mov    $0x1,%eax
 80490ad:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 80490b2:	83 f9 01             	cmp    $0x1,%ecx
 80490b5:	7f ce                	jg     8049085 <phase_8+0x5b>
 80490b7:	eb d6                	jmp    804908f <phase_8+0x65>
 80490b9:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 80490bd:	8d 44 24 24          	lea    0x24(%esp),%eax
 80490c1:	8d 74 24 38          	lea    0x38(%esp),%esi
 80490c5:	89 d9                	mov    %ebx,%ecx
 80490c7:	8b 50 04             	mov    0x4(%eax),%edx
 80490ca:	89 51 08             	mov    %edx,0x8(%ecx)
 80490cd:	83 c0 04             	add    $0x4,%eax
 80490d0:	89 d1                	mov    %edx,%ecx
 80490d2:	39 f0                	cmp    %esi,%eax
 80490d4:	75 f1                	jne    80490c7 <phase_8+0x9d>
 80490d6:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 80490dd:	be 05 00 00 00       	mov    $0x5,%esi
 80490e2:	8b 43 08             	mov    0x8(%ebx),%eax
 80490e5:	8b 00                	mov    (%eax),%eax
 80490e7:	39 03                	cmp    %eax,(%ebx)
 80490e9:	7e 05                	jle    80490f0 <phase_8+0xc6>
 80490eb:	e8 07 04 00 00       	call   80494f7 <explode_bomb>
 80490f0:	8b 5b 08             	mov    0x8(%ebx),%ebx
 80490f3:	83 ee 01             	sub    $0x1,%esi
 80490f6:	75 ea                	jne    80490e2 <phase_8+0xb8>
 80490f8:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80490fc:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049103:	74 05                	je     804910a <phase_8+0xe0>
 8049105:	e8 f6 f6 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804910a:	83 c4 44             	add    $0x44,%esp
 804910d:	5b                   	pop    %ebx
 804910e:	5e                   	pop    %esi
 804910f:	c3                   	ret    

08049110 <fun9>:
 8049110:	53                   	push   %ebx
 8049111:	83 ec 08             	sub    $0x8,%esp
 8049114:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049118:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 804911c:	85 d2                	test   %edx,%edx
 804911e:	74 37                	je     8049157 <fun9+0x47>
 8049120:	8b 1a                	mov    (%edx),%ebx
 8049122:	39 cb                	cmp    %ecx,%ebx
 8049124:	7e 13                	jle    8049139 <fun9+0x29>
 8049126:	83 ec 08             	sub    $0x8,%esp
 8049129:	51                   	push   %ecx
 804912a:	ff 72 04             	pushl  0x4(%edx)
 804912d:	e8 de ff ff ff       	call   8049110 <fun9>
 8049132:	83 c4 10             	add    $0x10,%esp
 8049135:	01 c0                	add    %eax,%eax
 8049137:	eb 23                	jmp    804915c <fun9+0x4c>
 8049139:	b8 00 00 00 00       	mov    $0x0,%eax
 804913e:	39 cb                	cmp    %ecx,%ebx
 8049140:	74 1a                	je     804915c <fun9+0x4c>
 8049142:	83 ec 08             	sub    $0x8,%esp
 8049145:	51                   	push   %ecx
 8049146:	ff 72 08             	pushl  0x8(%edx)
 8049149:	e8 c2 ff ff ff       	call   8049110 <fun9>
 804914e:	83 c4 10             	add    $0x10,%esp
 8049151:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8049155:	eb 05                	jmp    804915c <fun9+0x4c>
 8049157:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804915c:	83 c4 08             	add    $0x8,%esp
 804915f:	5b                   	pop    %ebx
 8049160:	c3                   	ret    

08049161 <phase_9>:
 8049161:	53                   	push   %ebx
 8049162:	83 ec 0c             	sub    $0xc,%esp
 8049165:	6a 0a                	push   $0xa
 8049167:	6a 00                	push   $0x0
 8049169:	ff 74 24 1c          	pushl  0x1c(%esp)
 804916d:	e8 ae f7 ff ff       	call   8048920 <strtol@plt>
 8049172:	89 c3                	mov    %eax,%ebx
 8049174:	8d 40 ff             	lea    -0x1(%eax),%eax
 8049177:	83 c4 10             	add    $0x10,%esp
 804917a:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 804917f:	76 05                	jbe    8049186 <phase_9+0x25>
 8049181:	e8 71 03 00 00       	call   80494f7 <explode_bomb>
 8049186:	83 ec 08             	sub    $0x8,%esp
 8049189:	53                   	push   %ebx
 804918a:	68 a0 d0 04 08       	push   $0x804d0a0
 804918f:	e8 7c ff ff ff       	call   8049110 <fun9>
 8049194:	83 c4 10             	add    $0x10,%esp
 8049197:	85 c0                	test   %eax,%eax
 8049199:	74 05                	je     80491a0 <phase_9+0x3f>
 804919b:	e8 57 03 00 00       	call   80494f7 <explode_bomb>
 80491a0:	83 c4 08             	add    $0x8,%esp
 80491a3:	5b                   	pop    %ebx
 80491a4:	c3                   	ret    

080491a5 <sig_handler>:
 80491a5:	83 ec 18             	sub    $0x18,%esp
 80491a8:	68 e0 a4 04 08       	push   $0x804a4e0
 80491ad:	e8 9e f6 ff ff       	call   8048850 <puts@plt>
 80491b2:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80491b9:	e8 22 f6 ff ff       	call   80487e0 <sleep@plt>
 80491be:	83 c4 08             	add    $0x8,%esp
 80491c1:	68 3d a6 04 08       	push   $0x804a63d
 80491c6:	6a 01                	push   $0x1
 80491c8:	e8 13 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 80491cd:	83 c4 04             	add    $0x4,%esp
 80491d0:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 80491d6:	e8 d5 f5 ff ff       	call   80487b0 <fflush@plt>
 80491db:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80491e2:	e8 f9 f5 ff ff       	call   80487e0 <sleep@plt>
 80491e7:	c7 04 24 45 a6 04 08 	movl   $0x804a645,(%esp)
 80491ee:	e8 5d f6 ff ff       	call   8048850 <puts@plt>
 80491f3:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 80491fa:	e8 71 f6 ff ff       	call   8048870 <exit@plt>

080491ff <invalid_phase>:
 80491ff:	83 ec 10             	sub    $0x10,%esp
 8049202:	ff 74 24 14          	pushl  0x14(%esp)
 8049206:	68 4d a6 04 08       	push   $0x804a64d
 804920b:	6a 01                	push   $0x1
 804920d:	e8 ce f6 ff ff       	call   80488e0 <__printf_chk@plt>
 8049212:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049219:	e8 52 f6 ff ff       	call   8048870 <exit@plt>

0804921e <string_length>:
 804921e:	8b 54 24 04          	mov    0x4(%esp),%edx
 8049222:	80 3a 00             	cmpb   $0x0,(%edx)
 8049225:	74 10                	je     8049237 <string_length+0x19>
 8049227:	b8 00 00 00 00       	mov    $0x0,%eax
 804922c:	83 c0 01             	add    $0x1,%eax
 804922f:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8049233:	75 f7                	jne    804922c <string_length+0xe>
 8049235:	f3 c3                	repz ret 
 8049237:	b8 00 00 00 00       	mov    $0x0,%eax
 804923c:	c3                   	ret    

0804923d <strings_not_equal>:
 804923d:	57                   	push   %edi
 804923e:	56                   	push   %esi
 804923f:	53                   	push   %ebx
 8049240:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049244:	8b 74 24 14          	mov    0x14(%esp),%esi
 8049248:	53                   	push   %ebx
 8049249:	e8 d0 ff ff ff       	call   804921e <string_length>
 804924e:	89 c7                	mov    %eax,%edi
 8049250:	89 34 24             	mov    %esi,(%esp)
 8049253:	e8 c6 ff ff ff       	call   804921e <string_length>
 8049258:	83 c4 04             	add    $0x4,%esp
 804925b:	ba 01 00 00 00       	mov    $0x1,%edx
 8049260:	39 c7                	cmp    %eax,%edi
 8049262:	75 38                	jne    804929c <strings_not_equal+0x5f>
 8049264:	0f b6 03             	movzbl (%ebx),%eax
 8049267:	84 c0                	test   %al,%al
 8049269:	74 1e                	je     8049289 <strings_not_equal+0x4c>
 804926b:	3a 06                	cmp    (%esi),%al
 804926d:	74 06                	je     8049275 <strings_not_equal+0x38>
 804926f:	eb 1f                	jmp    8049290 <strings_not_equal+0x53>
 8049271:	3a 06                	cmp    (%esi),%al
 8049273:	75 22                	jne    8049297 <strings_not_equal+0x5a>
 8049275:	83 c3 01             	add    $0x1,%ebx
 8049278:	83 c6 01             	add    $0x1,%esi
 804927b:	0f b6 03             	movzbl (%ebx),%eax
 804927e:	84 c0                	test   %al,%al
 8049280:	75 ef                	jne    8049271 <strings_not_equal+0x34>
 8049282:	ba 00 00 00 00       	mov    $0x0,%edx
 8049287:	eb 13                	jmp    804929c <strings_not_equal+0x5f>
 8049289:	ba 00 00 00 00       	mov    $0x0,%edx
 804928e:	eb 0c                	jmp    804929c <strings_not_equal+0x5f>
 8049290:	ba 01 00 00 00       	mov    $0x1,%edx
 8049295:	eb 05                	jmp    804929c <strings_not_equal+0x5f>
 8049297:	ba 01 00 00 00       	mov    $0x1,%edx
 804929c:	89 d0                	mov    %edx,%eax
 804929e:	5b                   	pop    %ebx
 804929f:	5e                   	pop    %esi
 80492a0:	5f                   	pop    %edi
 80492a1:	c3                   	ret    

080492a2 <initialize_bomb>:
 80492a2:	56                   	push   %esi
 80492a3:	53                   	push   %ebx
 80492a4:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 80492aa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80492b0:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 80492b7:	31 c0                	xor    %eax,%eax
 80492b9:	68 a5 91 04 08       	push   $0x80491a5
 80492be:	6a 02                	push   $0x2
 80492c0:	e8 0b f5 ff ff       	call   80487d0 <signal@plt>
 80492c5:	83 c4 08             	add    $0x8,%esp
 80492c8:	6a 40                	push   $0x40
 80492ca:	8d 44 24 18          	lea    0x18(%esp),%eax
 80492ce:	50                   	push   %eax
 80492cf:	e8 4c f5 ff ff       	call   8048820 <gethostname@plt>
 80492d4:	83 c4 10             	add    $0x10,%esp
 80492d7:	85 c0                	test   %eax,%eax
 80492d9:	75 14                	jne    80492ef <initialize_bomb+0x4d>
 80492db:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 80492e0:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 80492e5:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80492e9:	85 c0                	test   %eax,%eax
 80492eb:	75 1b                	jne    8049308 <initialize_bomb+0x66>
 80492ed:	eb 56                	jmp    8049345 <initialize_bomb+0xa3>
 80492ef:	83 ec 0c             	sub    $0xc,%esp
 80492f2:	68 18 a5 04 08       	push   $0x804a518
 80492f7:	e8 54 f5 ff ff       	call   8048850 <puts@plt>
 80492fc:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049303:	e8 68 f5 ff ff       	call   8048870 <exit@plt>
 8049308:	83 ec 08             	sub    $0x8,%esp
 804930b:	56                   	push   %esi
 804930c:	50                   	push   %eax
 804930d:	e8 8e f5 ff ff       	call   80488a0 <strcasecmp@plt>
 8049312:	83 c4 10             	add    $0x10,%esp
 8049315:	85 c0                	test   %eax,%eax
 8049317:	74 45                	je     804935e <initialize_bomb+0xbc>
 8049319:	83 c3 04             	add    $0x4,%ebx
 804931c:	8b 43 fc             	mov    -0x4(%ebx),%eax
 804931f:	85 c0                	test   %eax,%eax
 8049321:	75 e5                	jne    8049308 <initialize_bomb+0x66>
 8049323:	eb 20                	jmp    8049345 <initialize_bomb+0xa3>
 8049325:	83 ec 04             	sub    $0x4,%esp
 8049328:	8d 44 24 50          	lea    0x50(%esp),%eax
 804932c:	50                   	push   %eax
 804932d:	68 5e a6 04 08       	push   $0x804a65e
 8049332:	6a 01                	push   $0x1
 8049334:	e8 a7 f5 ff ff       	call   80488e0 <__printf_chk@plt>
 8049339:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049340:	e8 2b f5 ff ff       	call   8048870 <exit@plt>
 8049345:	83 ec 0c             	sub    $0xc,%esp
 8049348:	68 50 a5 04 08       	push   $0x804a550
 804934d:	e8 fe f4 ff ff       	call   8048850 <puts@plt>
 8049352:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049359:	e8 12 f5 ff ff       	call   8048870 <exit@plt>
 804935e:	83 ec 0c             	sub    $0xc,%esp
 8049361:	8d 44 24 58          	lea    0x58(%esp),%eax
 8049365:	50                   	push   %eax
 8049366:	e8 29 0c 00 00       	call   8049f94 <init_driver>
 804936b:	83 c4 10             	add    $0x10,%esp
 804936e:	85 c0                	test   %eax,%eax
 8049370:	78 b3                	js     8049325 <initialize_bomb+0x83>
 8049372:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 8049379:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049380:	74 05                	je     8049387 <initialize_bomb+0xe5>
 8049382:	e8 79 f4 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049387:	81 c4 54 20 00 00    	add    $0x2054,%esp
 804938d:	5b                   	pop    %ebx
 804938e:	5e                   	pop    %esi
 804938f:	c3                   	ret    

08049390 <initialize_bomb_solve>:
 8049390:	f3 c3                	repz ret 

08049392 <blank_line>:
 8049392:	56                   	push   %esi
 8049393:	53                   	push   %ebx
 8049394:	83 ec 04             	sub    $0x4,%esp
 8049397:	8b 74 24 10          	mov    0x10(%esp),%esi
 804939b:	eb 14                	jmp    80493b1 <blank_line+0x1f>
 804939d:	e8 ae f5 ff ff       	call   8048950 <__ctype_b_loc@plt>
 80493a2:	83 c6 01             	add    $0x1,%esi
 80493a5:	0f be db             	movsbl %bl,%ebx
 80493a8:	8b 00                	mov    (%eax),%eax
 80493aa:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 80493af:	74 0e                	je     80493bf <blank_line+0x2d>
 80493b1:	0f b6 1e             	movzbl (%esi),%ebx
 80493b4:	84 db                	test   %bl,%bl
 80493b6:	75 e5                	jne    804939d <blank_line+0xb>
 80493b8:	b8 01 00 00 00       	mov    $0x1,%eax
 80493bd:	eb 05                	jmp    80493c4 <blank_line+0x32>
 80493bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80493c4:	83 c4 04             	add    $0x4,%esp
 80493c7:	5b                   	pop    %ebx
 80493c8:	5e                   	pop    %esi
 80493c9:	c3                   	ret    

080493ca <skip>:
 80493ca:	53                   	push   %ebx
 80493cb:	83 ec 08             	sub    $0x8,%esp
 80493ce:	83 ec 04             	sub    $0x4,%esp
 80493d1:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 80493d7:	6a 50                	push   $0x50
 80493d9:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80493de:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80493e1:	c1 e0 04             	shl    $0x4,%eax
 80493e4:	05 00 d8 04 08       	add    $0x804d800,%eax
 80493e9:	50                   	push   %eax
 80493ea:	e8 d1 f3 ff ff       	call   80487c0 <fgets@plt>
 80493ef:	89 c3                	mov    %eax,%ebx
 80493f1:	83 c4 10             	add    $0x10,%esp
 80493f4:	85 c0                	test   %eax,%eax
 80493f6:	74 10                	je     8049408 <skip+0x3e>
 80493f8:	83 ec 0c             	sub    $0xc,%esp
 80493fb:	50                   	push   %eax
 80493fc:	e8 91 ff ff ff       	call   8049392 <blank_line>
 8049401:	83 c4 10             	add    $0x10,%esp
 8049404:	85 c0                	test   %eax,%eax
 8049406:	75 c6                	jne    80493ce <skip+0x4>
 8049408:	89 d8                	mov    %ebx,%eax
 804940a:	83 c4 08             	add    $0x8,%esp
 804940d:	5b                   	pop    %ebx
 804940e:	c3                   	ret    

0804940f <send_msg>:
 804940f:	57                   	push   %edi
 8049410:	53                   	push   %ebx
 8049411:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 8049417:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804941d:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 8049424:	31 c0                	xor    %eax,%eax
 8049426:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 804942c:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 8049430:	c1 e2 04             	shl    $0x4,%edx
 8049433:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 8049439:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804943e:	89 d7                	mov    %edx,%edi
 8049440:	f2 ae                	repnz scas %es:(%edi),%al
 8049442:	f7 d1                	not    %ecx
 8049444:	83 c1 63             	add    $0x63,%ecx
 8049447:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 804944d:	76 1b                	jbe    804946a <send_msg+0x5b>
 804944f:	83 ec 08             	sub    $0x8,%esp
 8049452:	68 88 a5 04 08       	push   $0x804a588
 8049457:	6a 01                	push   $0x1
 8049459:	e8 82 f4 ff ff       	call   80488e0 <__printf_chk@plt>
 804945e:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049465:	e8 06 f4 ff ff       	call   8048870 <exit@plt>
 804946a:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 8049471:	00 
 8049472:	b9 80 a6 04 08       	mov    $0x804a680,%ecx
 8049477:	b8 78 a6 04 08       	mov    $0x804a678,%eax
 804947c:	0f 44 c1             	cmove  %ecx,%eax
 804947f:	52                   	push   %edx
 8049480:	53                   	push   %ebx
 8049481:	50                   	push   %eax
 8049482:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 8049488:	68 89 a6 04 08       	push   $0x804a689
 804948d:	68 00 20 00 00       	push   $0x2000
 8049492:	6a 01                	push   $0x1
 8049494:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 8049498:	53                   	push   %ebx
 8049499:	e8 c2 f4 ff ff       	call   8048960 <__sprintf_chk@plt>
 804949e:	83 c4 20             	add    $0x20,%esp
 80494a1:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 80494a8:	50                   	push   %eax
 80494a9:	6a 00                	push   $0x0
 80494ab:	53                   	push   %ebx
 80494ac:	68 a0 d1 04 08       	push   $0x804d1a0
 80494b1:	e8 b0 0c 00 00       	call   804a166 <driver_post>
 80494b6:	83 c4 10             	add    $0x10,%esp
 80494b9:	85 c0                	test   %eax,%eax
 80494bb:	79 1c                	jns    80494d9 <send_msg+0xca>
 80494bd:	83 ec 0c             	sub    $0xc,%esp
 80494c0:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 80494c7:	50                   	push   %eax
 80494c8:	e8 83 f3 ff ff       	call   8048850 <puts@plt>
 80494cd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494d4:	e8 97 f3 ff ff       	call   8048870 <exit@plt>
 80494d9:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 80494e0:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80494e7:	74 05                	je     80494ee <send_msg+0xdf>
 80494e9:	e8 12 f3 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80494ee:	81 c4 14 40 00 00    	add    $0x4014,%esp
 80494f4:	5b                   	pop    %ebx
 80494f5:	5f                   	pop    %edi
 80494f6:	c3                   	ret    

080494f7 <explode_bomb>:
 80494f7:	83 ec 18             	sub    $0x18,%esp
 80494fa:	68 95 a6 04 08       	push   $0x804a695
 80494ff:	e8 4c f3 ff ff       	call   8048850 <puts@plt>
 8049504:	c7 04 24 9e a6 04 08 	movl   $0x804a69e,(%esp)
 804950b:	e8 40 f3 ff ff       	call   8048850 <puts@plt>
 8049510:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049517:	e8 f3 fe ff ff       	call   804940f <send_msg>
 804951c:	c7 04 24 ac a5 04 08 	movl   $0x804a5ac,(%esp)
 8049523:	e8 28 f3 ff ff       	call   8048850 <puts@plt>
 8049528:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804952f:	e8 3c f3 ff ff       	call   8048870 <exit@plt>

08049534 <read_six_numbers>:
 8049534:	83 ec 0c             	sub    $0xc,%esp
 8049537:	8b 44 24 14          	mov    0x14(%esp),%eax
 804953b:	8d 50 14             	lea    0x14(%eax),%edx
 804953e:	52                   	push   %edx
 804953f:	8d 50 10             	lea    0x10(%eax),%edx
 8049542:	52                   	push   %edx
 8049543:	8d 50 0c             	lea    0xc(%eax),%edx
 8049546:	52                   	push   %edx
 8049547:	8d 50 08             	lea    0x8(%eax),%edx
 804954a:	52                   	push   %edx
 804954b:	8d 50 04             	lea    0x4(%eax),%edx
 804954e:	52                   	push   %edx
 804954f:	50                   	push   %eax
 8049550:	68 b5 a6 04 08       	push   $0x804a6b5
 8049555:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049559:	e8 52 f3 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 804955e:	83 c4 20             	add    $0x20,%esp
 8049561:	83 f8 05             	cmp    $0x5,%eax
 8049564:	7f 05                	jg     804956b <read_six_numbers+0x37>
 8049566:	e8 8c ff ff ff       	call   80494f7 <explode_bomb>
 804956b:	83 c4 0c             	add    $0xc,%esp
 804956e:	c3                   	ret    

0804956f <read_line>:
 804956f:	57                   	push   %edi
 8049570:	56                   	push   %esi
 8049571:	53                   	push   %ebx
 8049572:	e8 53 fe ff ff       	call   80493ca <skip>
 8049577:	85 c0                	test   %eax,%eax
 8049579:	75 70                	jne    80495eb <read_line+0x7c>
 804957b:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8049580:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 8049586:	75 19                	jne    80495a1 <read_line+0x32>
 8049588:	83 ec 0c             	sub    $0xc,%esp
 804958b:	68 c7 a6 04 08       	push   $0x804a6c7
 8049590:	e8 bb f2 ff ff       	call   8048850 <puts@plt>
 8049595:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804959c:	e8 cf f2 ff ff       	call   8048870 <exit@plt>
 80495a1:	83 ec 0c             	sub    $0xc,%esp
 80495a4:	68 e5 a6 04 08       	push   $0x804a6e5
 80495a9:	e8 82 f2 ff ff       	call   8048830 <getenv@plt>
 80495ae:	83 c4 10             	add    $0x10,%esp
 80495b1:	85 c0                	test   %eax,%eax
 80495b3:	74 0a                	je     80495bf <read_line+0x50>
 80495b5:	83 ec 0c             	sub    $0xc,%esp
 80495b8:	6a 00                	push   $0x0
 80495ba:	e8 b1 f2 ff ff       	call   8048870 <exit@plt>
 80495bf:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80495c4:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 80495c9:	e8 fc fd ff ff       	call   80493ca <skip>
 80495ce:	85 c0                	test   %eax,%eax
 80495d0:	75 19                	jne    80495eb <read_line+0x7c>
 80495d2:	83 ec 0c             	sub    $0xc,%esp
 80495d5:	68 c7 a6 04 08       	push   $0x804a6c7
 80495da:	e8 71 f2 ff ff       	call   8048850 <puts@plt>
 80495df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80495e6:	e8 85 f2 ff ff       	call   8048870 <exit@plt>
 80495eb:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 80495f1:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80495f4:	c1 e3 04             	shl    $0x4,%ebx
 80495f7:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 80495fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8049602:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049607:	89 df                	mov    %ebx,%edi
 8049609:	f2 ae                	repnz scas %es:(%edi),%al
 804960b:	f7 d1                	not    %ecx
 804960d:	83 e9 01             	sub    $0x1,%ecx
 8049610:	83 f9 4e             	cmp    $0x4e,%ecx
 8049613:	7e 36                	jle    804964b <read_line+0xdc>
 8049615:	83 ec 0c             	sub    $0xc,%esp
 8049618:	68 f0 a6 04 08       	push   $0x804a6f0
 804961d:	e8 2e f2 ff ff       	call   8048850 <puts@plt>
 8049622:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049627:	8d 50 01             	lea    0x1(%eax),%edx
 804962a:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049630:	6b c0 50             	imul   $0x50,%eax,%eax
 8049633:	05 00 d8 04 08       	add    $0x804d800,%eax
 8049638:	be 0b a7 04 08       	mov    $0x804a70b,%esi
 804963d:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049642:	89 c7                	mov    %eax,%edi
 8049644:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049646:	e8 ac fe ff ff       	call   80494f7 <explode_bomb>
 804964b:	8d 04 92             	lea    (%edx,%edx,4),%eax
 804964e:	c1 e0 04             	shl    $0x4,%eax
 8049651:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 8049658:	00 
 8049659:	83 c2 01             	add    $0x1,%edx
 804965c:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049662:	89 d8                	mov    %ebx,%eax
 8049664:	5b                   	pop    %ebx
 8049665:	5e                   	pop    %esi
 8049666:	5f                   	pop    %edi
 8049667:	c3                   	ret    

08049668 <phase_defused>:
 8049668:	83 ec 18             	sub    $0x18,%esp
 804966b:	6a 01                	push   $0x1
 804966d:	e8 9d fd ff ff       	call   804940f <send_msg>
 8049672:	83 c4 10             	add    $0x10,%esp
 8049675:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 804967c:	75 1c                	jne    804969a <phase_defused+0x32>
 804967e:	83 ec 0c             	sub    $0xc,%esp
 8049681:	68 d0 a5 04 08       	push   $0x804a5d0
 8049686:	e8 c5 f1 ff ff       	call   8048850 <puts@plt>
 804968b:	c7 04 24 fc a5 04 08 	movl   $0x804a5fc,(%esp)
 8049692:	e8 b9 f1 ff ff       	call   8048850 <puts@plt>
 8049697:	83 c4 10             	add    $0x10,%esp
 804969a:	83 c4 0c             	add    $0xc,%esp
 804969d:	c3                   	ret    

0804969e <sigalrm_handler>:
 804969e:	83 ec 0c             	sub    $0xc,%esp
 80496a1:	6a 00                	push   $0x0
 80496a3:	68 04 ab 04 08       	push   $0x804ab04
 80496a8:	6a 01                	push   $0x1
 80496aa:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 80496b0:	e8 4b f2 ff ff       	call   8048900 <__fprintf_chk@plt>
 80496b5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80496bc:	e8 af f1 ff ff       	call   8048870 <exit@plt>

080496c1 <rio_readlineb>:
 80496c1:	55                   	push   %ebp
 80496c2:	57                   	push   %edi
 80496c3:	56                   	push   %esi
 80496c4:	53                   	push   %ebx
 80496c5:	83 ec 2c             	sub    $0x2c,%esp
 80496c8:	89 d7                	mov    %edx,%edi
 80496ca:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80496ce:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 80496d5:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80496d9:	31 d2                	xor    %edx,%edx
 80496db:	83 f9 01             	cmp    $0x1,%ecx
 80496de:	76 79                	jbe    8049759 <rio_readlineb+0x98>
 80496e0:	89 c3                	mov    %eax,%ebx
 80496e2:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80496e6:	bd 01 00 00 00       	mov    $0x1,%ebp
 80496eb:	8d 73 0c             	lea    0xc(%ebx),%esi
 80496ee:	eb 2d                	jmp    804971d <rio_readlineb+0x5c>
 80496f0:	83 ec 04             	sub    $0x4,%esp
 80496f3:	68 00 20 00 00       	push   $0x2000
 80496f8:	56                   	push   %esi
 80496f9:	ff 33                	pushl  (%ebx)
 80496fb:	e8 a0 f0 ff ff       	call   80487a0 <read@plt>
 8049700:	89 43 04             	mov    %eax,0x4(%ebx)
 8049703:	83 c4 10             	add    $0x10,%esp
 8049706:	85 c0                	test   %eax,%eax
 8049708:	79 0c                	jns    8049716 <rio_readlineb+0x55>
 804970a:	e8 c1 f1 ff ff       	call   80488d0 <__errno_location@plt>
 804970f:	83 38 04             	cmpl   $0x4,(%eax)
 8049712:	74 09                	je     804971d <rio_readlineb+0x5c>
 8049714:	eb 62                	jmp    8049778 <rio_readlineb+0xb7>
 8049716:	85 c0                	test   %eax,%eax
 8049718:	74 63                	je     804977d <rio_readlineb+0xbc>
 804971a:	89 73 08             	mov    %esi,0x8(%ebx)
 804971d:	8b 43 04             	mov    0x4(%ebx),%eax
 8049720:	85 c0                	test   %eax,%eax
 8049722:	7e cc                	jle    80496f0 <rio_readlineb+0x2f>
 8049724:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049727:	0f b6 11             	movzbl (%ecx),%edx
 804972a:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 804972e:	83 c1 01             	add    $0x1,%ecx
 8049731:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049734:	83 e8 01             	sub    $0x1,%eax
 8049737:	89 43 04             	mov    %eax,0x4(%ebx)
 804973a:	83 c7 01             	add    $0x1,%edi
 804973d:	88 57 ff             	mov    %dl,-0x1(%edi)
 8049740:	80 fa 0a             	cmp    $0xa,%dl
 8049743:	75 09                	jne    804974e <rio_readlineb+0x8d>
 8049745:	eb 1d                	jmp    8049764 <rio_readlineb+0xa3>
 8049747:	83 fd 01             	cmp    $0x1,%ebp
 804974a:	75 18                	jne    8049764 <rio_readlineb+0xa3>
 804974c:	eb 1b                	jmp    8049769 <rio_readlineb+0xa8>
 804974e:	83 c5 01             	add    $0x1,%ebp
 8049751:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049755:	74 09                	je     8049760 <rio_readlineb+0x9f>
 8049757:	eb c4                	jmp    804971d <rio_readlineb+0x5c>
 8049759:	bd 01 00 00 00       	mov    $0x1,%ebp
 804975e:	eb 04                	jmp    8049764 <rio_readlineb+0xa3>
 8049760:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 8049764:	c6 07 00             	movb   $0x0,(%edi)
 8049767:	89 e8                	mov    %ebp,%eax
 8049769:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804976d:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049774:	74 17                	je     804978d <rio_readlineb+0xcc>
 8049776:	eb 10                	jmp    8049788 <rio_readlineb+0xc7>
 8049778:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804977d:	85 c0                	test   %eax,%eax
 804977f:	74 c6                	je     8049747 <rio_readlineb+0x86>
 8049781:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049786:	eb e1                	jmp    8049769 <rio_readlineb+0xa8>
 8049788:	e8 73 f0 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804978d:	83 c4 2c             	add    $0x2c,%esp
 8049790:	5b                   	pop    %ebx
 8049791:	5e                   	pop    %esi
 8049792:	5f                   	pop    %edi
 8049793:	5d                   	pop    %ebp
 8049794:	c3                   	ret    

08049795 <submitr>:
 8049795:	55                   	push   %ebp
 8049796:	57                   	push   %edi
 8049797:	56                   	push   %esi
 8049798:	53                   	push   %ebx
 8049799:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 804979f:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 80497a6:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80497ad:	89 44 24 10          	mov    %eax,0x10(%esp)
 80497b1:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80497b8:	89 44 24 14          	mov    %eax,0x14(%esp)
 80497bc:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80497c3:	89 44 24 18          	mov    %eax,0x18(%esp)
 80497c7:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 80497ce:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80497d5:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80497d9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80497df:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80497e6:	31 c0                	xor    %eax,%eax
 80497e8:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80497ef:	00 
 80497f0:	6a 00                	push   $0x0
 80497f2:	6a 01                	push   $0x1
 80497f4:	6a 02                	push   $0x2
 80497f6:	e8 f5 f0 ff ff       	call   80488f0 <socket@plt>
 80497fb:	89 44 24 18          	mov    %eax,0x18(%esp)
 80497ff:	83 c4 10             	add    $0x10,%esp
 8049802:	85 c0                	test   %eax,%eax
 8049804:	79 52                	jns    8049858 <submitr+0xc3>
 8049806:	8b 44 24 18          	mov    0x18(%esp),%eax
 804980a:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049810:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049817:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 804981e:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049825:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804982c:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049833:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 804983a:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049841:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049848:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 804984e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049853:	e9 3f 06 00 00       	jmp    8049e97 <submitr+0x702>
 8049858:	83 ec 0c             	sub    $0xc,%esp
 804985b:	56                   	push   %esi
 804985c:	e8 af f0 ff ff       	call   8048910 <gethostbyname@plt>
 8049861:	83 c4 10             	add    $0x10,%esp
 8049864:	85 c0                	test   %eax,%eax
 8049866:	75 73                	jne    80498db <submitr+0x146>
 8049868:	8b 44 24 18          	mov    0x18(%esp),%eax
 804986c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049872:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 8049879:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 8049880:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049887:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804988e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049895:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804989c:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 80498a3:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80498aa:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80498b1:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80498b8:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80498be:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80498c2:	83 ec 0c             	sub    $0xc,%esp
 80498c5:	ff 74 24 14          	pushl  0x14(%esp)
 80498c9:	e8 72 f0 ff ff       	call   8048940 <close@plt>
 80498ce:	83 c4 10             	add    $0x10,%esp
 80498d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498d6:	e9 bc 05 00 00       	jmp    8049e97 <submitr+0x702>
 80498db:	8d 74 24 30          	lea    0x30(%esp),%esi
 80498df:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80498e6:	00 
 80498e7:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 80498ee:	00 
 80498ef:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 80498f6:	00 
 80498f7:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 80498fe:	00 
 80498ff:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049906:	6a 0c                	push   $0xc
 8049908:	ff 70 0c             	pushl  0xc(%eax)
 804990b:	8b 40 10             	mov    0x10(%eax),%eax
 804990e:	ff 30                	pushl  (%eax)
 8049910:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049914:	50                   	push   %eax
 8049915:	e8 46 ef ff ff       	call   8048860 <__memmove_chk@plt>
 804991a:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049921:	00 
 8049922:	66 c1 c8 08          	ror    $0x8,%ax
 8049926:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804992b:	83 c4 0c             	add    $0xc,%esp
 804992e:	6a 10                	push   $0x10
 8049930:	56                   	push   %esi
 8049931:	ff 74 24 14          	pushl  0x14(%esp)
 8049935:	e8 f6 ef ff ff       	call   8048930 <connect@plt>
 804993a:	83 c4 10             	add    $0x10,%esp
 804993d:	85 c0                	test   %eax,%eax
 804993f:	79 65                	jns    80499a6 <submitr+0x211>
 8049941:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049945:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804994b:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049952:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049959:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 8049960:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 8049967:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 804996e:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 8049975:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 804997c:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049983:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 8049989:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 804998d:	83 ec 0c             	sub    $0xc,%esp
 8049990:	ff 74 24 14          	pushl  0x14(%esp)
 8049994:	e8 a7 ef ff ff       	call   8048940 <close@plt>
 8049999:	83 c4 10             	add    $0x10,%esp
 804999c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499a1:	e9 f1 04 00 00       	jmp    8049e97 <submitr+0x702>
 80499a6:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80499ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80499b0:	89 f1                	mov    %esi,%ecx
 80499b2:	89 df                	mov    %ebx,%edi
 80499b4:	f2 ae                	repnz scas %es:(%edi),%al
 80499b6:	f7 d1                	not    %ecx
 80499b8:	89 cd                	mov    %ecx,%ebp
 80499ba:	89 f1                	mov    %esi,%ecx
 80499bc:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80499c0:	f2 ae                	repnz scas %es:(%edi),%al
 80499c2:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80499c6:	89 f1                	mov    %esi,%ecx
 80499c8:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80499cc:	f2 ae                	repnz scas %es:(%edi),%al
 80499ce:	89 ca                	mov    %ecx,%edx
 80499d0:	f7 d2                	not    %edx
 80499d2:	89 f1                	mov    %esi,%ecx
 80499d4:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80499d8:	f2 ae                	repnz scas %es:(%edi),%al
 80499da:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 80499de:	29 ca                	sub    %ecx,%edx
 80499e0:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 80499e4:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80499e8:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80499ed:	76 7e                	jbe    8049a6d <submitr+0x2d8>
 80499ef:	8b 44 24 18          	mov    0x18(%esp),%eax
 80499f3:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80499f9:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 8049a00:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049a07:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049a0e:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049a15:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049a1c:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049a23:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049a2a:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049a31:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049a38:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 8049a3f:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049a46:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049a4d:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049a54:	83 ec 0c             	sub    $0xc,%esp
 8049a57:	ff 74 24 14          	pushl  0x14(%esp)
 8049a5b:	e8 e0 ee ff ff       	call   8048940 <close@plt>
 8049a60:	83 c4 10             	add    $0x10,%esp
 8049a63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a68:	e9 2a 04 00 00       	jmp    8049e97 <submitr+0x702>
 8049a6d:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 8049a74:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049a79:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a7e:	89 d7                	mov    %edx,%edi
 8049a80:	f3 ab                	rep stos %eax,%es:(%edi)
 8049a82:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049a87:	89 df                	mov    %ebx,%edi
 8049a89:	f2 ae                	repnz scas %es:(%edi),%al
 8049a8b:	f7 d1                	not    %ecx
 8049a8d:	89 ce                	mov    %ecx,%esi
 8049a8f:	83 ee 01             	sub    $0x1,%esi
 8049a92:	0f 84 5c 04 00 00    	je     8049ef4 <submitr+0x75f>
 8049a98:	89 d5                	mov    %edx,%ebp
 8049a9a:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 8049a9f:	0f b6 13             	movzbl (%ebx),%edx
 8049aa2:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 8049aa5:	b8 01 00 00 00       	mov    $0x1,%eax
 8049aaa:	80 f9 0f             	cmp    $0xf,%cl
 8049aad:	77 0a                	ja     8049ab9 <submitr+0x324>
 8049aaf:	89 f8                	mov    %edi,%eax
 8049ab1:	d3 e8                	shr    %cl,%eax
 8049ab3:	83 f0 01             	xor    $0x1,%eax
 8049ab6:	83 e0 01             	and    $0x1,%eax
 8049ab9:	80 fa 5f             	cmp    $0x5f,%dl
 8049abc:	0f 94 c1             	sete   %cl
 8049abf:	38 c1                	cmp    %al,%cl
 8049ac1:	73 0c                	jae    8049acf <submitr+0x33a>
 8049ac3:	89 d0                	mov    %edx,%eax
 8049ac5:	83 e0 df             	and    $0xffffffdf,%eax
 8049ac8:	83 e8 41             	sub    $0x41,%eax
 8049acb:	3c 19                	cmp    $0x19,%al
 8049acd:	77 08                	ja     8049ad7 <submitr+0x342>
 8049acf:	88 55 00             	mov    %dl,0x0(%ebp)
 8049ad2:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049ad5:	eb 62                	jmp    8049b39 <submitr+0x3a4>
 8049ad7:	80 fa 20             	cmp    $0x20,%dl
 8049ada:	75 09                	jne    8049ae5 <submitr+0x350>
 8049adc:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049ae0:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049ae3:	eb 54                	jmp    8049b39 <submitr+0x3a4>
 8049ae5:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049ae8:	3c 5f                	cmp    $0x5f,%al
 8049aea:	76 09                	jbe    8049af5 <submitr+0x360>
 8049aec:	80 fa 09             	cmp    $0x9,%dl
 8049aef:	0f 85 bb 03 00 00    	jne    8049eb0 <submitr+0x71b>
 8049af5:	83 ec 0c             	sub    $0xc,%esp
 8049af8:	0f b6 d2             	movzbl %dl,%edx
 8049afb:	52                   	push   %edx
 8049afc:	68 10 ac 04 08       	push   $0x804ac10
 8049b01:	6a 08                	push   $0x8
 8049b03:	6a 01                	push   $0x1
 8049b05:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049b0c:	50                   	push   %eax
 8049b0d:	e8 4e ee ff ff       	call   8048960 <__sprintf_chk@plt>
 8049b12:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049b19:	00 
 8049b1a:	88 45 00             	mov    %al,0x0(%ebp)
 8049b1d:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049b24:	00 
 8049b25:	88 45 01             	mov    %al,0x1(%ebp)
 8049b28:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049b2f:	00 
 8049b30:	88 45 02             	mov    %al,0x2(%ebp)
 8049b33:	83 c4 20             	add    $0x20,%esp
 8049b36:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049b39:	83 c3 01             	add    $0x1,%ebx
 8049b3c:	83 ee 01             	sub    $0x1,%esi
 8049b3f:	0f 85 5a ff ff ff    	jne    8049a9f <submitr+0x30a>
 8049b45:	e9 aa 03 00 00       	jmp    8049ef4 <submitr+0x75f>
 8049b4a:	83 ec 04             	sub    $0x4,%esp
 8049b4d:	53                   	push   %ebx
 8049b4e:	56                   	push   %esi
 8049b4f:	55                   	push   %ebp
 8049b50:	e8 3b ed ff ff       	call   8048890 <write@plt>
 8049b55:	83 c4 10             	add    $0x10,%esp
 8049b58:	85 c0                	test   %eax,%eax
 8049b5a:	7f 0f                	jg     8049b6b <submitr+0x3d6>
 8049b5c:	e8 6f ed ff ff       	call   80488d0 <__errno_location@plt>
 8049b61:	83 38 04             	cmpl   $0x4,(%eax)
 8049b64:	75 0f                	jne    8049b75 <submitr+0x3e0>
 8049b66:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b6b:	01 c6                	add    %eax,%esi
 8049b6d:	29 c3                	sub    %eax,%ebx
 8049b6f:	75 d9                	jne    8049b4a <submitr+0x3b5>
 8049b71:	85 ff                	test   %edi,%edi
 8049b73:	79 69                	jns    8049bde <submitr+0x449>
 8049b75:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b79:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b7f:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b86:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b8d:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b94:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b9b:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049ba2:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049ba9:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049bb0:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049bb7:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049bbe:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049bc5:	83 ec 0c             	sub    $0xc,%esp
 8049bc8:	ff 74 24 14          	pushl  0x14(%esp)
 8049bcc:	e8 6f ed ff ff       	call   8048940 <close@plt>
 8049bd1:	83 c4 10             	add    $0x10,%esp
 8049bd4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049bd9:	e9 b9 02 00 00       	jmp    8049e97 <submitr+0x702>
 8049bde:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049be2:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049be6:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049bed:	00 
 8049bee:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049bf2:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049bf6:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049bfb:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049c02:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c06:	e8 b6 fa ff ff       	call   80496c1 <rio_readlineb>
 8049c0b:	85 c0                	test   %eax,%eax
 8049c0d:	7f 7d                	jg     8049c8c <submitr+0x4f7>
 8049c0f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c13:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c19:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c20:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049c27:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049c2e:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049c35:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049c3c:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049c43:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049c4a:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049c51:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049c58:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049c5f:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049c66:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049c6d:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049c73:	83 ec 0c             	sub    $0xc,%esp
 8049c76:	ff 74 24 14          	pushl  0x14(%esp)
 8049c7a:	e8 c1 ec ff ff       	call   8048940 <close@plt>
 8049c7f:	83 c4 10             	add    $0x10,%esp
 8049c82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c87:	e9 0b 02 00 00       	jmp    8049e97 <submitr+0x702>
 8049c8c:	83 ec 0c             	sub    $0xc,%esp
 8049c8f:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049c96:	50                   	push   %eax
 8049c97:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c9b:	50                   	push   %eax
 8049c9c:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049ca3:	50                   	push   %eax
 8049ca4:	68 17 ac 04 08       	push   $0x804ac17
 8049ca9:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049cb0:	50                   	push   %eax
 8049cb1:	e8 fa eb ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049cb6:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049cba:	83 c4 20             	add    $0x20,%esp
 8049cbd:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049cc2:	0f 84 c4 00 00 00    	je     8049d8c <submitr+0x5f7>
 8049cc8:	83 ec 08             	sub    $0x8,%esp
 8049ccb:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049cd2:	52                   	push   %edx
 8049cd3:	50                   	push   %eax
 8049cd4:	68 28 ab 04 08       	push   $0x804ab28
 8049cd9:	6a ff                	push   $0xffffffff
 8049cdb:	6a 01                	push   $0x1
 8049cdd:	ff 74 24 34          	pushl  0x34(%esp)
 8049ce1:	e8 7a ec ff ff       	call   8048960 <__sprintf_chk@plt>
 8049ce6:	83 c4 14             	add    $0x14,%esp
 8049ce9:	ff 74 24 14          	pushl  0x14(%esp)
 8049ced:	e8 4e ec ff ff       	call   8048940 <close@plt>
 8049cf2:	83 c4 10             	add    $0x10,%esp
 8049cf5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cfa:	e9 98 01 00 00       	jmp    8049e97 <submitr+0x702>
 8049cff:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049d04:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049d0b:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049d0f:	e8 ad f9 ff ff       	call   80496c1 <rio_readlineb>
 8049d14:	85 c0                	test   %eax,%eax
 8049d16:	7f 74                	jg     8049d8c <submitr+0x5f7>
 8049d18:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d1c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049d22:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049d29:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049d30:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049d37:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d3e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d45:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d4c:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049d53:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049d5a:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049d61:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049d68:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049d6f:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049d73:	83 ec 0c             	sub    $0xc,%esp
 8049d76:	ff 74 24 14          	pushl  0x14(%esp)
 8049d7a:	e8 c1 eb ff ff       	call   8048940 <close@plt>
 8049d7f:	83 c4 10             	add    $0x10,%esp
 8049d82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d87:	e9 0b 01 00 00       	jmp    8049e97 <submitr+0x702>
 8049d8c:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049d93:	0d 
 8049d94:	0f 85 65 ff ff ff    	jne    8049cff <submitr+0x56a>
 8049d9a:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049da1:	0a 
 8049da2:	0f 85 57 ff ff ff    	jne    8049cff <submitr+0x56a>
 8049da8:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049daf:	00 
 8049db0:	0f 85 49 ff ff ff    	jne    8049cff <submitr+0x56a>
 8049db6:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049dbb:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049dc2:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049dc6:	e8 f6 f8 ff ff       	call   80496c1 <rio_readlineb>
 8049dcb:	85 c0                	test   %eax,%eax
 8049dcd:	7f 7b                	jg     8049e4a <submitr+0x6b5>
 8049dcf:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049dd3:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049dd9:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049de0:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049de7:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049dee:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049df5:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049dfc:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049e03:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049e0a:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049e11:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049e18:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049e1f:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049e26:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049e2d:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049e34:	83 ec 0c             	sub    $0xc,%esp
 8049e37:	ff 74 24 14          	pushl  0x14(%esp)
 8049e3b:	e8 00 eb ff ff       	call   8048940 <close@plt>
 8049e40:	83 c4 10             	add    $0x10,%esp
 8049e43:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e48:	eb 4d                	jmp    8049e97 <submitr+0x702>
 8049e4a:	83 ec 08             	sub    $0x8,%esp
 8049e4d:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049e54:	50                   	push   %eax
 8049e55:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049e59:	57                   	push   %edi
 8049e5a:	e8 b1 e9 ff ff       	call   8048810 <strcpy@plt>
 8049e5f:	83 c4 04             	add    $0x4,%esp
 8049e62:	ff 74 24 14          	pushl  0x14(%esp)
 8049e66:	e8 d5 ea ff ff       	call   8048940 <close@plt>
 8049e6b:	0f b6 17             	movzbl (%edi),%edx
 8049e6e:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049e73:	83 c4 10             	add    $0x10,%esp
 8049e76:	29 d0                	sub    %edx,%eax
 8049e78:	75 13                	jne    8049e8d <submitr+0x6f8>
 8049e7a:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049e7e:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049e83:	29 d0                	sub    %edx,%eax
 8049e85:	75 06                	jne    8049e8d <submitr+0x6f8>
 8049e87:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049e8b:	f7 d8                	neg    %eax
 8049e8d:	85 c0                	test   %eax,%eax
 8049e8f:	0f 95 c0             	setne  %al
 8049e92:	0f b6 c0             	movzbl %al,%eax
 8049e95:	f7 d8                	neg    %eax
 8049e97:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049e9e:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049ea5:	0f 84 a9 00 00 00    	je     8049f54 <submitr+0x7bf>
 8049eab:	e9 9f 00 00 00       	jmp    8049f4f <submitr+0x7ba>
 8049eb0:	a1 58 ab 04 08       	mov    0x804ab58,%eax
 8049eb5:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049eb9:	89 07                	mov    %eax,(%edi)
 8049ebb:	a1 97 ab 04 08       	mov    0x804ab97,%eax
 8049ec0:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049ec3:	89 f8                	mov    %edi,%eax
 8049ec5:	83 c7 04             	add    $0x4,%edi
 8049ec8:	83 e7 fc             	and    $0xfffffffc,%edi
 8049ecb:	29 f8                	sub    %edi,%eax
 8049ecd:	be 58 ab 04 08       	mov    $0x804ab58,%esi
 8049ed2:	29 c6                	sub    %eax,%esi
 8049ed4:	83 c0 43             	add    $0x43,%eax
 8049ed7:	c1 e8 02             	shr    $0x2,%eax
 8049eda:	89 c1                	mov    %eax,%ecx
 8049edc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049ede:	83 ec 0c             	sub    $0xc,%esp
 8049ee1:	ff 74 24 14          	pushl  0x14(%esp)
 8049ee5:	e8 56 ea ff ff       	call   8048940 <close@plt>
 8049eea:	83 c4 10             	add    $0x10,%esp
 8049eed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ef2:	eb a3                	jmp    8049e97 <submitr+0x702>
 8049ef4:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049efb:	50                   	push   %eax
 8049efc:	ff 74 24 18          	pushl  0x18(%esp)
 8049f00:	ff 74 24 18          	pushl  0x18(%esp)
 8049f04:	ff 74 24 18          	pushl  0x18(%esp)
 8049f08:	68 9c ab 04 08       	push   $0x804ab9c
 8049f0d:	68 00 20 00 00       	push   $0x2000
 8049f12:	6a 01                	push   $0x1
 8049f14:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049f1b:	57                   	push   %edi
 8049f1c:	e8 3f ea ff ff       	call   8048960 <__sprintf_chk@plt>
 8049f21:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f26:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049f2b:	f2 ae                	repnz scas %es:(%edi),%al
 8049f2d:	f7 d1                	not    %ecx
 8049f2f:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049f32:	83 c4 20             	add    $0x20,%esp
 8049f35:	89 fb                	mov    %edi,%ebx
 8049f37:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049f3e:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049f42:	85 ff                	test   %edi,%edi
 8049f44:	0f 85 00 fc ff ff    	jne    8049b4a <submitr+0x3b5>
 8049f4a:	e9 8f fc ff ff       	jmp    8049bde <submitr+0x449>
 8049f4f:	e8 ac e8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049f54:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049f5a:	5b                   	pop    %ebx
 8049f5b:	5e                   	pop    %esi
 8049f5c:	5f                   	pop    %edi
 8049f5d:	5d                   	pop    %ebp
 8049f5e:	c3                   	ret    

08049f5f <init_timeout>:
 8049f5f:	53                   	push   %ebx
 8049f60:	83 ec 08             	sub    $0x8,%esp
 8049f63:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049f67:	85 db                	test   %ebx,%ebx
 8049f69:	74 24                	je     8049f8f <init_timeout+0x30>
 8049f6b:	83 ec 08             	sub    $0x8,%esp
 8049f6e:	68 9e 96 04 08       	push   $0x804969e
 8049f73:	6a 0e                	push   $0xe
 8049f75:	e8 56 e8 ff ff       	call   80487d0 <signal@plt>
 8049f7a:	85 db                	test   %ebx,%ebx
 8049f7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f81:	0f 48 d8             	cmovs  %eax,%ebx
 8049f84:	89 1c 24             	mov    %ebx,(%esp)
 8049f87:	e8 64 e8 ff ff       	call   80487f0 <alarm@plt>
 8049f8c:	83 c4 10             	add    $0x10,%esp
 8049f8f:	83 c4 08             	add    $0x8,%esp
 8049f92:	5b                   	pop    %ebx
 8049f93:	c3                   	ret    

08049f94 <init_driver>:
 8049f94:	57                   	push   %edi
 8049f95:	56                   	push   %esi
 8049f96:	53                   	push   %ebx
 8049f97:	83 ec 28             	sub    $0x28,%esp
 8049f9a:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049f9e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049fa4:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049fa8:	31 c0                	xor    %eax,%eax
 8049faa:	6a 01                	push   $0x1
 8049fac:	6a 0d                	push   $0xd
 8049fae:	e8 1d e8 ff ff       	call   80487d0 <signal@plt>
 8049fb3:	83 c4 08             	add    $0x8,%esp
 8049fb6:	6a 01                	push   $0x1
 8049fb8:	6a 1d                	push   $0x1d
 8049fba:	e8 11 e8 ff ff       	call   80487d0 <signal@plt>
 8049fbf:	83 c4 08             	add    $0x8,%esp
 8049fc2:	6a 01                	push   $0x1
 8049fc4:	6a 1d                	push   $0x1d
 8049fc6:	e8 05 e8 ff ff       	call   80487d0 <signal@plt>
 8049fcb:	83 c4 0c             	add    $0xc,%esp
 8049fce:	6a 00                	push   $0x0
 8049fd0:	6a 01                	push   $0x1
 8049fd2:	6a 02                	push   $0x2
 8049fd4:	e8 17 e9 ff ff       	call   80488f0 <socket@plt>
 8049fd9:	83 c4 10             	add    $0x10,%esp
 8049fdc:	85 c0                	test   %eax,%eax
 8049fde:	79 4e                	jns    804a02e <init_driver+0x9a>
 8049fe0:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049fe6:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049fed:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049ff4:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049ffb:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a002:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a009:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 804a010:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 804a017:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 804a01e:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 804a024:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a029:	e9 1f 01 00 00       	jmp    804a14d <init_driver+0x1b9>
 804a02e:	89 c3                	mov    %eax,%ebx
 804a030:	83 ec 0c             	sub    $0xc,%esp
 804a033:	68 28 ac 04 08       	push   $0x804ac28
 804a038:	e8 d3 e8 ff ff       	call   8048910 <gethostbyname@plt>
 804a03d:	83 c4 10             	add    $0x10,%esp
 804a040:	85 c0                	test   %eax,%eax
 804a042:	75 6c                	jne    804a0b0 <init_driver+0x11c>
 804a044:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 804a04a:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 804a051:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 804a058:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 804a05f:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a066:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a06d:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 804a074:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 804a07b:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 804a082:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 804a089:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 804a090:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a096:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a09a:	83 ec 0c             	sub    $0xc,%esp
 804a09d:	53                   	push   %ebx
 804a09e:	e8 9d e8 ff ff       	call   8048940 <close@plt>
 804a0a3:	83 c4 10             	add    $0x10,%esp
 804a0a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a0ab:	e9 9d 00 00 00       	jmp    804a14d <init_driver+0x1b9>
 804a0b0:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 804a0b4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a0bb:	00 
 804a0bc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a0c3:	00 
 804a0c4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a0cb:	00 
 804a0cc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a0d3:	00 
 804a0d4:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 804a0db:	6a 0c                	push   $0xc
 804a0dd:	ff 70 0c             	pushl  0xc(%eax)
 804a0e0:	8b 40 10             	mov    0x10(%eax),%eax
 804a0e3:	ff 30                	pushl  (%eax)
 804a0e5:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804a0e9:	50                   	push   %eax
 804a0ea:	e8 71 e7 ff ff       	call   8048860 <__memmove_chk@plt>
 804a0ef:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a0f6:	83 c4 0c             	add    $0xc,%esp
 804a0f9:	6a 10                	push   $0x10
 804a0fb:	57                   	push   %edi
 804a0fc:	53                   	push   %ebx
 804a0fd:	e8 2e e8 ff ff       	call   8048930 <connect@plt>
 804a102:	83 c4 10             	add    $0x10,%esp
 804a105:	85 c0                	test   %eax,%eax
 804a107:	79 2a                	jns    804a133 <init_driver+0x19f>
 804a109:	83 ec 0c             	sub    $0xc,%esp
 804a10c:	68 28 ac 04 08       	push   $0x804ac28
 804a111:	68 e8 ab 04 08       	push   $0x804abe8
 804a116:	6a ff                	push   $0xffffffff
 804a118:	6a 01                	push   $0x1
 804a11a:	56                   	push   %esi
 804a11b:	e8 40 e8 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a120:	83 c4 14             	add    $0x14,%esp
 804a123:	53                   	push   %ebx
 804a124:	e8 17 e8 ff ff       	call   8048940 <close@plt>
 804a129:	83 c4 10             	add    $0x10,%esp
 804a12c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a131:	eb 1a                	jmp    804a14d <init_driver+0x1b9>
 804a133:	83 ec 0c             	sub    $0xc,%esp
 804a136:	53                   	push   %ebx
 804a137:	e8 04 e8 ff ff       	call   8048940 <close@plt>
 804a13c:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a141:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a145:	83 c4 10             	add    $0x10,%esp
 804a148:	b8 00 00 00 00       	mov    $0x0,%eax
 804a14d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a151:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a158:	74 05                	je     804a15f <init_driver+0x1cb>
 804a15a:	e8 a1 e6 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a15f:	83 c4 20             	add    $0x20,%esp
 804a162:	5b                   	pop    %ebx
 804a163:	5e                   	pop    %esi
 804a164:	5f                   	pop    %edi
 804a165:	c3                   	ret    

0804a166 <driver_post>:
 804a166:	53                   	push   %ebx
 804a167:	83 ec 08             	sub    $0x8,%esp
 804a16a:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a16e:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a172:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a177:	74 26                	je     804a19f <driver_post+0x39>
 804a179:	83 ec 04             	sub    $0x4,%esp
 804a17c:	ff 74 24 18          	pushl  0x18(%esp)
 804a180:	68 3d ac 04 08       	push   $0x804ac3d
 804a185:	6a 01                	push   $0x1
 804a187:	e8 54 e7 ff ff       	call   80488e0 <__printf_chk@plt>
 804a18c:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a191:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a195:	83 c4 10             	add    $0x10,%esp
 804a198:	b8 00 00 00 00       	mov    $0x0,%eax
 804a19d:	eb 3e                	jmp    804a1dd <driver_post+0x77>
 804a19f:	85 c0                	test   %eax,%eax
 804a1a1:	74 2c                	je     804a1cf <driver_post+0x69>
 804a1a3:	80 38 00             	cmpb   $0x0,(%eax)
 804a1a6:	74 27                	je     804a1cf <driver_post+0x69>
 804a1a8:	83 ec 04             	sub    $0x4,%esp
 804a1ab:	53                   	push   %ebx
 804a1ac:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a1b0:	68 54 ac 04 08       	push   $0x804ac54
 804a1b5:	50                   	push   %eax
 804a1b6:	68 5b ac 04 08       	push   $0x804ac5b
 804a1bb:	68 31 43 00 00       	push   $0x4331
 804a1c0:	68 28 ac 04 08       	push   $0x804ac28
 804a1c5:	e8 cb f5 ff ff       	call   8049795 <submitr>
 804a1ca:	83 c4 20             	add    $0x20,%esp
 804a1cd:	eb 0e                	jmp    804a1dd <driver_post+0x77>
 804a1cf:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a1d4:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a1d8:	b8 00 00 00 00       	mov    $0x0,%eax
 804a1dd:	83 c4 08             	add    $0x8,%esp
 804a1e0:	5b                   	pop    %ebx
 804a1e1:	c3                   	ret    
 804a1e2:	66 90                	xchg   %ax,%ax
 804a1e4:	66 90                	xchg   %ax,%ax
 804a1e6:	66 90                	xchg   %ax,%ax
 804a1e8:	66 90                	xchg   %ax,%ax
 804a1ea:	66 90                	xchg   %ax,%ax
 804a1ec:	66 90                	xchg   %ax,%ax
 804a1ee:	66 90                	xchg   %ax,%ax

0804a1f0 <__libc_csu_init>:
 804a1f0:	55                   	push   %ebp
 804a1f1:	57                   	push   %edi
 804a1f2:	56                   	push   %esi
 804a1f3:	53                   	push   %ebx
 804a1f4:	e8 b7 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a1f9:	81 c3 07 2e 00 00    	add    $0x2e07,%ebx
 804a1ff:	83 ec 0c             	sub    $0xc,%esp
 804a202:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a206:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a20c:	e8 4f e5 ff ff       	call   8048760 <_init>
 804a211:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a217:	29 c6                	sub    %eax,%esi
 804a219:	c1 fe 02             	sar    $0x2,%esi
 804a21c:	85 f6                	test   %esi,%esi
 804a21e:	74 25                	je     804a245 <__libc_csu_init+0x55>
 804a220:	31 ff                	xor    %edi,%edi
 804a222:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a228:	83 ec 04             	sub    $0x4,%esp
 804a22b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a22f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a233:	55                   	push   %ebp
 804a234:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a23b:	83 c7 01             	add    $0x1,%edi
 804a23e:	83 c4 10             	add    $0x10,%esp
 804a241:	39 f7                	cmp    %esi,%edi
 804a243:	75 e3                	jne    804a228 <__libc_csu_init+0x38>
 804a245:	83 c4 0c             	add    $0xc,%esp
 804a248:	5b                   	pop    %ebx
 804a249:	5e                   	pop    %esi
 804a24a:	5f                   	pop    %edi
 804a24b:	5d                   	pop    %ebp
 804a24c:	c3                   	ret    
 804a24d:	8d 76 00             	lea    0x0(%esi),%esi

0804a250 <__libc_csu_fini>:
 804a250:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a254 <_fini>:
 804a254:	53                   	push   %ebx
 804a255:	83 ec 08             	sub    $0x8,%esp
 804a258:	e8 53 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a25d:	81 c3 a3 2d 00 00    	add    $0x2da3,%ebx
 804a263:	83 c4 08             	add    $0x8,%esp
 804a266:	5b                   	pop    %ebx
 804a267:	c3                   	ret    
